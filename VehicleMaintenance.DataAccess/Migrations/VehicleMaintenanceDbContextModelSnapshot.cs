// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using VehicleMaintenance.DataAccess.Concrete;

namespace VehicleMaintenance.DataAccess.Migrations
{
    [DbContext(typeof(VehicleMaintenanceDbContext))]
    partial class VehicleMaintenanceDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("VehicleMaintenance.Entity.Concrete.ActionType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<TimeSpan>("CreateDate")
                        .HasColumnType("interval");

                    b.Property<int?>("CreatedByUserID")
                        .HasColumnType("integer");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("integer");

                    b.Property<TimeSpan>("ModifyDate")
                        .HasColumnType("interval");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.HasIndex("CreatedByUserID");

                    b.ToTable("ActionType");
                });

            modelBuilder.Entity("VehicleMaintenance.Entity.Concrete.Maintenance", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<TimeSpan>("CreateDate")
                        .HasColumnType("interval");

                    b.Property<int?>("CreatedByUserID")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<DateTime>("ExpectedTimeToFix")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("LocationLatitude")
                        .HasColumnType("text");

                    b.Property<string>("LocationLongitude")
                        .HasColumnType("text");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("integer");

                    b.Property<TimeSpan>("ModifyDate")
                        .HasColumnType("interval");

                    b.Property<int?>("PictureGroupID")
                        .HasColumnType("integer");

                    b.Property<int?>("ResponsibleUserID")
                        .HasColumnType("integer");

                    b.Property<int?>("StatusID")
                        .HasColumnType("integer");

                    b.Property<int?>("UserID")
                        .HasColumnType("integer");

                    b.Property<int?>("VehicleID")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.HasIndex("CreatedByUserID");

                    b.HasIndex("PictureGroupID");

                    b.HasIndex("ResponsibleUserID");

                    b.HasIndex("StatusID");

                    b.HasIndex("UserID");

                    b.HasIndex("VehicleID");

                    b.ToTable("Maintenance");
                });

            modelBuilder.Entity("VehicleMaintenance.Entity.Concrete.MaintenanceHistory", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("ActionTypeID")
                        .HasColumnType("integer");

                    b.Property<TimeSpan>("CreateDate")
                        .HasColumnType("interval");

                    b.Property<int?>("CreatedByUserID")
                        .HasColumnType("integer");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int?>("MaintenanceID")
                        .HasColumnType("integer");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("integer");

                    b.Property<TimeSpan>("ModifyDate")
                        .HasColumnType("interval");

                    b.Property<string>("Text")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.HasIndex("ActionTypeID");

                    b.HasIndex("CreatedByUserID");

                    b.HasIndex("MaintenanceID");

                    b.ToTable("MaintenanceHistory");
                });

            modelBuilder.Entity("VehicleMaintenance.Entity.Concrete.PictureGroup", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<TimeSpan>("CreateDate")
                        .HasColumnType("interval");

                    b.Property<int?>("CreatedByUserID")
                        .HasColumnType("integer");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("integer");

                    b.Property<TimeSpan>("ModifyDate")
                        .HasColumnType("interval");

                    b.Property<string>("PictureImage")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.HasIndex("CreatedByUserID");

                    b.ToTable("PictureGroup");
                });

            modelBuilder.Entity("VehicleMaintenance.Entity.Concrete.Status", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<TimeSpan>("CreateDate")
                        .HasColumnType("interval");

                    b.Property<int?>("CreatedByUserID")
                        .HasColumnType("integer");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("integer");

                    b.Property<TimeSpan>("ModifyDate")
                        .HasColumnType("interval");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.HasIndex("CreatedByUserID");

                    b.ToTable("Status");
                });

            modelBuilder.Entity("VehicleMaintenance.Entity.Concrete.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<TimeSpan>("CreateDate")
                        .HasColumnType("interval");

                    b.Property<int?>("CreatedByUserID")
                        .HasColumnType("integer");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("integer");

                    b.Property<TimeSpan>("ModifyDate")
                        .HasColumnType("interval");

                    b.Property<byte[]>("Password")
                        .HasColumnType("bytea");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<string>("ProfilePicture")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.HasIndex("CreatedByUserID");

                    b.ToTable("User");
                });

            modelBuilder.Entity("VehicleMaintenance.Entity.Concrete.Vehicle", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<TimeSpan>("CreateDate")
                        .HasColumnType("interval");

                    b.Property<int?>("CreatedByUserID")
                        .HasColumnType("integer");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("integer");

                    b.Property<TimeSpan>("ModifyDate")
                        .HasColumnType("interval");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("PlateNo")
                        .HasColumnType("text");

                    b.Property<int?>("UserID")
                        .HasColumnType("integer");

                    b.Property<int?>("VehicleTypeID")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.HasIndex("CreatedByUserID");

                    b.HasIndex("UserID");

                    b.HasIndex("VehicleTypeID");

                    b.ToTable("Vehicle");
                });

            modelBuilder.Entity("VehicleMaintenance.Entity.Concrete.VehicleType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<TimeSpan>("CreateDate")
                        .HasColumnType("interval");

                    b.Property<int?>("CreatedByUserID")
                        .HasColumnType("integer");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("integer");

                    b.Property<TimeSpan>("ModifyDate")
                        .HasColumnType("interval");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.HasIndex("CreatedByUserID");

                    b.ToTable("VehicleType");
                });

            modelBuilder.Entity("VehicleMaintenance.Entity.Concrete.ActionType", b =>
                {
                    b.HasOne("VehicleMaintenance.Entity.Concrete.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedByUserID");
                });

            modelBuilder.Entity("VehicleMaintenance.Entity.Concrete.Maintenance", b =>
                {
                    b.HasOne("VehicleMaintenance.Entity.Concrete.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedByUserID");

                    b.HasOne("VehicleMaintenance.Entity.Concrete.PictureGroup", "PictureGroup")
                        .WithMany()
                        .HasForeignKey("PictureGroupID");

                    b.HasOne("VehicleMaintenance.Entity.Concrete.User", "ResponsibleUser")
                        .WithMany()
                        .HasForeignKey("ResponsibleUserID");

                    b.HasOne("VehicleMaintenance.Entity.Concrete.Status", "Status")
                        .WithMany()
                        .HasForeignKey("StatusID");

                    b.HasOne("VehicleMaintenance.Entity.Concrete.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID");

                    b.HasOne("VehicleMaintenance.Entity.Concrete.Vehicle", "Vehicle")
                        .WithMany()
                        .HasForeignKey("VehicleID");
                });

            modelBuilder.Entity("VehicleMaintenance.Entity.Concrete.MaintenanceHistory", b =>
                {
                    b.HasOne("VehicleMaintenance.Entity.Concrete.ActionType", "ActionType")
                        .WithMany()
                        .HasForeignKey("ActionTypeID");

                    b.HasOne("VehicleMaintenance.Entity.Concrete.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedByUserID");

                    b.HasOne("VehicleMaintenance.Entity.Concrete.Maintenance", "Maintenance")
                        .WithMany()
                        .HasForeignKey("MaintenanceID");
                });

            modelBuilder.Entity("VehicleMaintenance.Entity.Concrete.PictureGroup", b =>
                {
                    b.HasOne("VehicleMaintenance.Entity.Concrete.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedByUserID");
                });

            modelBuilder.Entity("VehicleMaintenance.Entity.Concrete.Status", b =>
                {
                    b.HasOne("VehicleMaintenance.Entity.Concrete.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedByUserID");
                });

            modelBuilder.Entity("VehicleMaintenance.Entity.Concrete.User", b =>
                {
                    b.HasOne("VehicleMaintenance.Entity.Concrete.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedByUserID");
                });

            modelBuilder.Entity("VehicleMaintenance.Entity.Concrete.Vehicle", b =>
                {
                    b.HasOne("VehicleMaintenance.Entity.Concrete.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedByUserID");

                    b.HasOne("VehicleMaintenance.Entity.Concrete.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID");

                    b.HasOne("VehicleMaintenance.Entity.Concrete.VehicleType", "VehicleType")
                        .WithMany()
                        .HasForeignKey("VehicleTypeID");
                });

            modelBuilder.Entity("VehicleMaintenance.Entity.Concrete.VehicleType", b =>
                {
                    b.HasOne("VehicleMaintenance.Entity.Concrete.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedByUserID");
                });
#pragma warning restore 612, 618
        }
    }
}
